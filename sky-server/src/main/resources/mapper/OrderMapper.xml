<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into orders(number, status, user_id, address_book_id, order_time, checkout_time, pay_method,
                           pay_status, amount, remark, phone, address, user_name, consignee, cancel_reason,
                           rejection_reason, cancel_time, estimated_delivery_time, delivery_status, delivery_time,
                           pack_amount, tableware_number, tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{userName}, #{consignee}, #{cancelReason},
                #{rejectionReason}, #{cancelTime}, #{estimatedDeliveryTime}, #{deliveryStatus}, #{deliveryTime},
                #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>
    <update id="update">
        update orders
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="cancelReason != null">
                cancel_reason = #{cancelReason},
            </if>
            <if test="rejectionReason != null">
                rejection_reason = #{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime},
            </if>
            <if test="estimatedDeliveryTime != null">
                estimated_delivery_time = #{estimatedDeliveryTime},
            </if>
            <if test="deliveryStatus != null">
                delivery_status = #{deliveryStatus},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time = #{checkoutTime},
            </if>
        </set>
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="number != null">
                and number = #{number}
            </if>
        </where>
    </update>
    <select id="getOrders" resultType="com.sky.entity.Orders">
        select id,
        number,
        status,
        user_id,
        address_book_id,
        order_time,
        checkout_time,
        pay_method,
        pay_status,
        amount,
        remark,
        phone,
        address,
        user_name,
        consignee,
        cancel_reason,
        rejection_reason,
        cancel_time,
        estimated_delivery_time,
        delivery_status,
        delivery_time,
        pack_amount,
        tableware_number,
        tableware_status
        from orders
        <where>
            <if test="number != null">
                and number = #{number}
            </if>
            <if test="id != null">
                and id = #{id}
            </if>
        </where>
    </select>
    <select id="pageQuery" resultType="com.sky.vo.OrderVO">
        select id,
        number,
        status,
        user_id,
        address_book_id,
        order_time,
        checkout_time,
        pay_method,
        pay_status,
        amount,
        remark,
        phone,
        address,
        user_name,
        consignee,
        cancel_reason,
        rejection_reason,
        cancel_time,
        estimated_delivery_time,
        delivery_status,
        delivery_time,
        pack_amount,
        tableware_number,
        tableware_status
        from orders
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="number != null">
                and number like concat('%',#{number},'%')
            </if>
            <if test="phone != null">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>
    <select id="statusCount" resultType="java.lang.Integer">
        select COUNT(*)
        from orders
        where status = #{status}
    </select>
    <select id="getTimeOutOrders" resultType="com.sky.entity.Orders">
        select id,
               number,
               status,
               user_id,
               address_book_id,
               order_time,
               checkout_time,
               pay_method,
               pay_status,
               amount,
               remark,
               phone,
               address,
               user_name,
               consignee,
               cancel_reason,
               rejection_reason,
               cancel_time,
               estimated_delivery_time,
               delivery_status,
               delivery_time,
               pack_amount,
               tableware_number,
               tableware_status
        from orders
        where status = 1
        and order_time &lt; DATE_SUB(NOW(), INTERVAL 15 MINUTE)
    </select>
    <select id="getOrdersByStatus" resultType="com.sky.entity.Orders">
        select id,
               number,
               status,
               user_id,
               address_book_id,
               order_time,
               checkout_time,
               pay_method,
               pay_status,
               amount,
               remark,
               phone,
               address,
               user_name,
               consignee,
               cancel_reason,
               rejection_reason,
               cancel_time,
               estimated_delivery_time,
               delivery_status,
               delivery_time,
               pack_amount,
               tableware_number,
               tableware_status
        from orders
        where status = #{status}
    </select>
    <select id="getTurnover" resultType="java.lang.Float">
        select SUM(amount)
        from orders
        where DATE(order_time) = #{date} and status = 5;
    </select>
    <select id="getOrderCount" resultType="java.lang.Integer">
        select COUNT(*) from orders
        <where>
            <if test="date != null">
                and DATE(order_time) = #{date}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>



</mapper>
